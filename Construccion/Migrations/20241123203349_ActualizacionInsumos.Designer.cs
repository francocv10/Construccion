// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Construccion.Migrations
{
    [DbContext(typeof(ConstruccionContext))]
    [Migration("20241123203349_ActualizacionInsumos")]
    partial class ActualizacionInsumos
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Construccion.Models.Bodega", b =>
                {
                    b.Property<int>("IdBodega")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBodega"));

                    b.Property<string>("NombreBodega")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdBodega")
                        .HasName("PK_Bodega");

                    b.ToTable("Bodega", (string)null);
                });

            modelBuilder.Entity("Construccion.Models.Hito", b =>
                {
                    b.Property<int>("IdHito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHito"));

                    b.Property<bool>("Finalizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("IdObra")
                        .HasColumnType("int");

                    b.Property<int?>("IdPartida")
                        .HasColumnType("int");

                    b.Property<string>("NombreHito")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdHito")
                        .HasName("PK_Hito");

                    b.HasIndex("IdObra");

                    b.HasIndex("IdPartida");

                    b.ToTable("Hitos", (string)null);
                });

            modelBuilder.Entity("Construccion.Models.Insumos", b =>
                {
                    b.Property<int>("IdInsumos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdInsumos"));

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("IdBodega")
                        .HasColumnType("int");

                    b.Property<int?>("IdObra")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdInsumos")
                        .HasName("PK_Insumos");

                    b.HasIndex("IdBodega");

                    b.HasIndex("IdObra");

                    b.ToTable("Insumos", (string)null);
                });

            modelBuilder.Entity("Construccion.Models.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("IdPartida")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("TipoUnidad")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id")
                        .HasName("PK_Material");

                    b.HasIndex("IdPartida");

                    b.ToTable("Material", (string)null);
                });

            modelBuilder.Entity("Construccion.Models.Obra", b =>
                {
                    b.Property<int>("IdObra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdObra"));

                    b.Property<string>("Cliente")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NombreObra")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdObra")
                        .HasName("PK_Obra");

                    b.ToTable("Obras", (string)null);
                });

            modelBuilder.Entity("Construccion.Models.Partida", b =>
                {
                    b.Property<int>("IdPartida")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPartida"));

                    b.Property<int>("IdObra")
                        .HasColumnType("int");

                    b.Property<decimal>("ManoDeObra")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdPartida")
                        .HasName("PK_Partida");

                    b.HasIndex("IdObra");

                    b.ToTable("Partida", (string)null);
                });

            modelBuilder.Entity("Construccion.Models.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRol"));

                    b.Property<string>("NombreRol")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.HasKey("IdRol")
                        .HasName("PK_Rol");

                    b.ToTable("Rol", (string)null);
                });

            modelBuilder.Entity("Construccion.Models.SalidaMaterial", b =>
                {
                    b.Property<int>("IdSalida")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSalida"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaSalida")
                        .HasColumnType("datetime");

                    b.Property<int>("IdBodega")
                        .HasColumnType("int");

                    b.Property<int>("IdInsumo")
                        .HasColumnType("int");

                    b.Property<int?>("IdObra")
                        .HasColumnType("int");

                    b.HasKey("IdSalida")
                        .HasName("PK_SalidaMaterial");

                    b.HasIndex("IdBodega");

                    b.HasIndex("IdInsumo");

                    b.HasIndex("IdObra");

                    b.ToTable("SalidaMaterial", (string)null);
                });

            modelBuilder.Entity("Construccion.Models.SeguimientoObra", b =>
                {
                    b.Property<int>("IdSeguimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSeguimiento"));

                    b.Property<DateTime>("FechaSeguimiento")
                        .HasColumnType("datetime");

                    b.Property<int>("IdObra")
                        .HasColumnType("int");

                    b.HasKey("IdSeguimiento")
                        .HasName("PK_SeguimientoObra");

                    b.HasIndex("IdObra");

                    b.ToTable("SeguimientoObra", (string)null);
                });

            modelBuilder.Entity("Construccion.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<string>("Identificador")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.HasKey("IdUsuario")
                        .HasName("PK_Usuario");

                    b.HasIndex("IdRol");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("Construccion.Models.UsuarioAcceso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DireccionIP")
                        .IsRequired()
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)");

                    b.Property<DateTime>("FechaHoraAcceso")
                        .HasColumnType("datetime");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_UsuarioAcceso");

                    b.HasIndex("IdUsuario");

                    b.ToTable("UsuarioAcceso", (string)null);
                });

            modelBuilder.Entity("Construccion.Models.Hito", b =>
                {
                    b.HasOne("Construccion.Models.Obra", "Obra")
                        .WithMany()
                        .HasForeignKey("IdObra")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Hito_Obra");

                    b.HasOne("Construccion.Models.Partida", "Partida")
                        .WithMany()
                        .HasForeignKey("IdPartida")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_Hito_Partida");

                    b.Navigation("Obra");

                    b.Navigation("Partida");
                });

            modelBuilder.Entity("Construccion.Models.Insumos", b =>
                {
                    b.HasOne("Construccion.Models.Bodega", "Bodega")
                        .WithMany("Insumos")
                        .HasForeignKey("IdBodega")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Insumos_Bodega");

                    b.HasOne("Construccion.Models.Obra", "Obra")
                        .WithMany()
                        .HasForeignKey("IdObra")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_Insumos_Obra");

                    b.Navigation("Bodega");

                    b.Navigation("Obra");
                });

            modelBuilder.Entity("Construccion.Models.Material", b =>
                {
                    b.HasOne("Construccion.Models.Partida", "Partida")
                        .WithMany("Materiales")
                        .HasForeignKey("IdPartida")
                        .HasConstraintName("FK_Material_Partida");

                    b.Navigation("Partida");
                });

            modelBuilder.Entity("Construccion.Models.Partida", b =>
                {
                    b.HasOne("Construccion.Models.Obra", "Obra")
                        .WithMany("Partidas")
                        .HasForeignKey("IdObra")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Partida_Obra");

                    b.Navigation("Obra");
                });

            modelBuilder.Entity("Construccion.Models.SalidaMaterial", b =>
                {
                    b.HasOne("Construccion.Models.Bodega", "Bodega")
                        .WithMany()
                        .HasForeignKey("IdBodega")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_SalidaMaterial_Bodega");

                    b.HasOne("Construccion.Models.Insumos", "Insumo")
                        .WithMany()
                        .HasForeignKey("IdInsumo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_SalidaMaterial_Insumos");

                    b.HasOne("Construccion.Models.Obra", "Obra")
                        .WithMany()
                        .HasForeignKey("IdObra")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_SalidaMaterial_Obra");

                    b.Navigation("Bodega");

                    b.Navigation("Insumo");

                    b.Navigation("Obra");
                });

            modelBuilder.Entity("Construccion.Models.SeguimientoObra", b =>
                {
                    b.HasOne("Construccion.Models.Obra", "Obra")
                        .WithMany()
                        .HasForeignKey("IdObra")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_SeguimientoObra_Obra");

                    b.Navigation("Obra");
                });

            modelBuilder.Entity("Construccion.Models.Usuario", b =>
                {
                    b.HasOne("Construccion.Models.Rol", "IdRolNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Usuario_Rol");

                    b.Navigation("IdRolNavigation");
                });

            modelBuilder.Entity("Construccion.Models.UsuarioAcceso", b =>
                {
                    b.HasOne("Construccion.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_UsuarioAcceso_Usuario");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Construccion.Models.Bodega", b =>
                {
                    b.Navigation("Insumos");
                });

            modelBuilder.Entity("Construccion.Models.Obra", b =>
                {
                    b.Navigation("Partidas");
                });

            modelBuilder.Entity("Construccion.Models.Partida", b =>
                {
                    b.Navigation("Materiales");
                });

            modelBuilder.Entity("Construccion.Models.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
